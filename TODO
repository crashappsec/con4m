# This needs to migrate to github issues.

# P0: Need for current sami work
- string literals still need to be converted to values properly (in treecheck).
  Currently they're just raw.
- Ability to load a stacked configuration file.
- String interpolations (This is nim-side only).
- Integrate into SAMI
- Build a SAMI config file

# P1: Before going public
- Enumerated types
- The ability to add code callbacks / non-recursive procedures
- member (.) access (needed for callbacks to be usable)
- What happens w/ bad indexing?
- Should we only allow assigning to ATTRS once?  At least per-file?
- Cleanup error handling massively, including error messages and what
  context gets oututted.
- Add tuples
- Get the spec enforcement stuff so it can happen at compile time, and translate
  to a native data structure.  Right now it's all runtime.

# P2: Later is fine. Add these issues to the repo to track, when time.
- Add in <<END as an option for long strings
- Move strings to resources
- Standalone binary to output JSON
- Read in JSON files too (using a basic translation of the AST).
- Communicate w/ an app over stdin/stdout
- Hot reloading of configs.
- TOML bindings
- What to do w/ null?
- Check dict literals for duplicate entries.  Right now they get squashed.
- Make == and != work on dicts and lists
- Make + and - work for lists and dicts.
- Curses UI for config management
- Command-line flag handling
- Ability to embed and dump configs into the actual binary itself.
- Mutation of iterator variables needs to be disallowed.